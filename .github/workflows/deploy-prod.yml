name: Production deployment

on:
  # Triggers the workflow on completed test workflow runs, but only for the main branch
  workflow_run:
    workflows: [Node Test]
    branches: [ httpsServer ]
    types:
      - completed
  # Triggers the workflow on push events but only for the main branch
  #push:
    #branches: [ httpsServer ]

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Save Secret frontend .env localy
        run: echo "${{ secrets.PROD_DEPLOY_FRONTEND_ENV_FILE }}" > ${{ github.workspace }}/paint-me/frontend/.env
      
      - name: Save Secret backend .env localy
        run: echo "${{ secrets.PROD_DEPLOY_BACKEND_ENV_FILE }}" > ${{ github.workspace }}/paint-me/backend/.env

      
      - name: Stop App on Server frontend
        uses: appleboy/ssh-action@v0.1.4
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          port: ${{ secrets.PROD_DEPLOY_PORT }}
          username: ${{ secrets.PROD_DEPLOY_USERNAME }}
          script: ${{ secrets.PROD_DEPLOY_FRONTEND_COMMAND_STOP }}
      
      - name: Stop App on Server backend
        uses: appleboy/ssh-action@v0.1.4
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          port: ${{ secrets.PROD_DEPLOY_PORT }}
          username: ${{ secrets.PROD_DEPLOY_USERNAME }}
          script: ${{ secrets.PROD_DEPLOY_BACKEND_COMMAND_STOP }}
      
      - name: Copy Code to Server
        uses: burnett01/rsync-deployments@5.2
        with:
          remote_key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          remote_host: ${{ secrets.PROD_DEPLOY_HOST }}
          remote_port : ${{ secrets.PROD_DEPLOY_PORT }}
          remote_user: ${{ secrets.PROD_DEPLOY_USERNAME }}
          remote_path: ${{ secrets.PROD_DEPLOY_TARGET_PATH }}
          switches: -avzr --delete
          
      - name: Install dependencies on Server frontend
        uses: appleboy/ssh-action@v0.1.4
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          port: ${{ secrets.PROD_DEPLOY_PORT }}
          username: ${{ secrets.PROD_DEPLOY_USERNAME }}
          script: cd ${{ secrets.PROD_DEPLOY_FRONTEND_TARGET_PATH }} && npm install

      - name: Install dependencies on Server backend
        uses: appleboy/ssh-action@v0.1.4
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          port: ${{ secrets.PROD_DEPLOY_PORT }}
          username: ${{ secrets.PROD_DEPLOY_USERNAME }}
          script: cd ${{ secrets.PROD_DEPLOY_BACKEND_TARGET_PATH }} && npm install

      - name: Start App on Server frontend
        uses: appleboy/ssh-action@v0.1.4
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          port: ${{ secrets.PROD_DEPLOY_PORT }}
          username: ${{ secrets.PROD_DEPLOY_USERNAME }}
          script: ${{ secrets.PROD_DEPLOY_FRONTEND_COMMAND_START }}

      - name: Start App on Server backend
        uses: appleboy/ssh-action@v0.1.4
        with:
          key: ${{ secrets.PROD_DEPLOY_SSH_KEY }}
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          port: ${{ secrets.PROD_DEPLOY_PORT }}
          username: ${{ secrets.PROD_DEPLOY_USERNAME }}
          script: ${{ secrets.PROD_DEPLOY_BACKEND_COMMAND_START }}
          
          
          